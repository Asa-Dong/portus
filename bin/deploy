#!/bin/bash

#------------------------------------------------------------------------------
# Environment variables:
#------------------------------------------------------------------------------

export MARATHON_URL="${MARATHON_URL:-http://master-1:8080}"
export ETCD_ENDPOINTS="${ETCD_ENDPOINTS:-http://quorum-1:2379}"

#------------------------------------------------------------------------------
# reparametrize reads a marathon.json file from stdin and replaces any env
# parameter which value is equal to '$1' with a new composed value of '$1=$2'.
# The result is then written to stdout allowing to pipe it over and over.
#------------------------------------------------------------------------------

function reparametrize() {
  jq --arg env "$1" --arg val "$2" \
  '(.apps[] | .env[$env]) |= $val'
}

#------------------------------------------------------------------------------
# Deploy the calico policy definitions:
#------------------------------------------------------------------------------

if ! calicoctl apply -f calico.yaml; then
  echo "Ops! Unable to create the calico policy."
  exit 1
fi

#------------------------------------------------------------------------------
# Generate a temporary reparametrized json file:
#------------------------------------------------------------------------------

TMP_MARATHON=$(mktemp /tmp/portus-marathon.XXX)
trap "rm -f ${TMP_MARATHON}" INT TERM HUP EXIT

cat marathon.json |
  reparametrize 'MARIADB_PASSWORD' "${MARIADB_PASSWORD:-portus}" |
  reparametrize 'PORTUS_PORTUS_PASSWORD' "${PORTUS_PORTUS_PASSWORD:-portus}" |
  reparametrize 'PORTUS_SECRET_KEY_BASE' "${PORTUS_SECRET_KEY_BASE:-portus}" |
  reparametrize 'MYSQL_ROOT_PASSWORD' "${MYSQL_ROOT_PASSWORD:-portus}" |
  reparametrize 'MYSQL_PASSWORD' "${MARIADB_PASSWORD:-portus}" \
> ${TMP_MARATHON}

#------------------------------------------------------------------------------
# Deploy the marathon app definition:
#------------------------------------------------------------------------------

if ! curl -sX POST -H "Content-type: application/json" \
${MARATHON_URL}/v2/groups -d @${TMP_MARATHON} | jq '.'; then
  echo "Ops! Unable to deploy marathon app."
  exit 1
fi
